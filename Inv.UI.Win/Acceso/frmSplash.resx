<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAA5lJREFUeF7t
        nd+LTGEYx9/8CPlRovy6UP6CKaWElBtuXbhwI9xsCTcuVqS4lUih/AFK60K52KLdc16/dgsbbogbIVey
        iZKUfTzPzLu1O/NmjjN2zvd9zvOpT1PbnDPPeT+zOzVz5qwzDMMwDMMwkuAszXMZbXM5HWQHIczoeHOm
        2pHRAefpPS8CgXrHPaLlYVrl5HSl7eAx9fRYf5ScBjoOHFmJMkwrwvTKyGkZH+CXjoNGV20UT3ujB5yG
        Y/qieDoTOVAMM/rNt1MdP5+tsig5XWg7QCQ/c5QjfNstyrieKOhBBE+Hwm9L7D7TPncjtKp5/6RJIYiQ
        0eF6REkliFCLKCkFEdRHSS2IUDRKTqvDFgmRYhChWJQXbGJRUg0iqIySchBBXZTUgwiqomgIIqiJoiWI
        UCSKp5d8CxxFUxAh+SjaggjF/ny9YteGLYDQGERINorWIEJOR9m/v3XvacI9pJVhCwCwg0yGKctTJEpO
        t8K9AcAOQu4BrQuTlqdIlBFaE+5dMehBPF0Pk/ZGtygwJ+KhB2k5xAu2k5/Fm3oyo4uRfbf0tCOsSMWk
        EWTutSBgWhAwLQiYFgRMCwKmBQHTgoBpQcC0IGBaEDAtCJgWBEwLAqYFAdOCgKkkyG0+kGPsvord7zI6
        xfPIWSSxOburIMhg2AMOY7SEF/Z+ZNbuJh7kbfMiNYjk1GibtZiJB7kZtsZDnig5/Wybt7uJBxkPW+Mx
        Shsi83Y38SBTfOC7wh6w8HQ1Mm93Fbyof2dPso3oKTf9Vk4T8nRjxnz/poIgurQgYFoQMC0ImBYETAsC
        poognt7wrVzNNH693f/vJX5M+cJmfJ5eTD5IRtfcM1oY9tI/5K0RT+eiM/Vi4kE+umFaFPbQf1rvV8nV
        fmKzlTPxIENh6+rwdDkyV3mTDiKfOVSNvOMcm62sif+G/GIbYQ/9Z5Q28uN/mzFP7yb/op7TB3YPuyDs
        ae4Zovn8eNvZ12xspvIqCDKtfBg02Sd/sLEZeldREB1aEDAtCJgWBEwLAqYFAdOCgGlBwLQgYFoQMC0I
        mBYETAsCpgUB04KACRMko/PRAeump61hRSompxMdw9VR+UoDBKO0JTpgvXwXVgOA1olnE5Eh6+TpsBog
        ZLSZh5q7z6uRbT0ZF4eVACKj3TzY11nD6veJu0frwwoAIhe+l8txe/oUGV6TT9mBSs5NLs1dWtr8vxra
        TCqCYRiGYRiGYQDi3B/6pReCaLzvhAAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>